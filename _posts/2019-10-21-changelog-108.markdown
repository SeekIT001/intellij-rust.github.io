---
layout: post
title: "IntelliJ Rust Changelog #108"
date: 2019-10-21 17:14:48 +0300
---


## New Features

<!-- https://github.com/intellij-rust/intellij-rust/pull/4537 -->
<!-- https://github.com/intellij-rust/intellij-rust/pull/4488 -->
<!-- https://github.com/intellij-rust/intellij-rust/pull/4342 -->
*  Initial support of `cfg` attributes.
Now the plugin can evaluate some expressions inside `cfg` attributes.
Code that plugin considers disabled has gray foreground now and it isn't taken part while name resolution and code analysis.
For example, if you have several definitions of the same item for different operating systems, the plugin doesn't treat them as duplicates now.
The set of supported options is quite small at this moment. The most notable supported options are `unix`, `windows` and `target_os`
(full set can be found in the corresponding [issue](https://github.com/intellij-rust/intellij-rust/pull/4488)).
Note, [features](https://doc.rust-lang.org/cargo/reference/manifest.html#the-features-section) defined via `Cargo.toml` are still unsupported

    <img src="/assets/posts/changelog-108/cfg-attributes.png" alt="cfg attributes" width="700px"/>

<!-- https://github.com/intellij-rust/intellij-rust/pull/4398 -->
* Improve `Edit | Extend Selection` and `View | Type Info` actions for code inside macro calls.
If a piece of code in macro call is expanded into exactly the same code,
the corresponding actions work for it in the same way as they work with code outside of macro call.
Note, it works only when the experimental macro expansion engine is enabled.
You can turn it on via `Preferences | Languages & Frameworks | Rust | Expand declarative macros` option

    {% include gif-img.html path="/assets/posts/changelog-108/extend-selection-in-macros" w="700px" %}

<!-- https://github.com/intellij-rust/intellij-rust/pull/4474 -->
* Provide Rust specific dictionary for the spellchecker. It should fix false positive warning annotations on some commonly used Rust words like `deref`.
Spellchecker dictionaries can be configured in `Preferences | Editor | Spelling` setting panel

<!-- https://github.com/intellij-rust/intellij-rust/pull/4523 -->
* Improve rendering of external libraries. Now all stdlib crates are grouped into a single library.
Also, a version is displayed for each library in the external library tree

    <img src="/assets/posts/changelog-108/external-libraries.png" alt="external libraries" width="300px"/>


<!-- https://github.com/intellij-rust/intellij-rust/pull/4478 -->
* Parse [associated type bounds](https://github.com/rust-lang/rfcs/blob/master/text/2289-associated-type-bounds.md) properly

<!-- https://github.com/intellij-rust/intellij-rust/pull/2651 -->
* Display items generated by macros in [Structure View](https://www.jetbrains.com/help/idea/viewing-structure-of-a-source-file.html)

## Fixes

<!-- https://github.com/intellij-rust/intellij-rust/pull/4507 -->
* Process library with custom source location properly.
Previously, if library `Cargo.toml` had custom [path](https://doc.rust-lang.org/cargo/reference/manifest.html#configuring-a-target) of `lib` target,
the sources were not indexed sometimes that led to unexpected unresolved names

<!-- https://github.com/intellij-rust/intellij-rust/pull/4490 -->
* Improve editor responsiveness while macro expansion process

<!-- https://github.com/intellij-rust/intellij-rust/pull/4461 -->
* Fix Rust language injection into doc comments with 2019.3 EAPs


Full set of changes can be found [here](https://github.com/intellij-rust/intellij-rust/milestone/16)


