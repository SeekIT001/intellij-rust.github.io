---
layout: post
title: "IntelliJ Rust Changelog #122"
date: 2020-05-19 11:32:59 +0300
---

Most of the new features in the release have been added by third-party contributors.
Many thanks to [@Kobzol] for the extraordinary amount of contributions!

You can participate too! Join our open source development on [Github].

## New Features

* Inlay hints improvements:
    <!-- https://github.com/intellij-rust/intellij-rust/pull/5276 -->
    <!-- https://github.com/intellij-rust/intellij-rust/pull/5361 -->
    * New inlay hints for chained method calls (by [@Kobzol])

        <img src="/assets/posts/changelog-122/5276.png" alt="chained method calls screenshot" width="646px"/>

    <!-- https://github.com/intellij-rust/intellij-rust/pull/5197 -->
    * Show type hints for type placeholders `_` (by [@avrong])

        <img src="/assets/posts/changelog-122/5197.png" alt="type hints for type placeholders screenshot" width="510px"/>

    <!-- https://github.com/intellij-rust/intellij-rust/pull/5195 -->
    * Support blacklisting for inlay parameter hints. You can find these settings in
      `Settings | Editor | Inlay Hints | Rust | Parameter hints | Blacklist...` (by [@Kobzol])

  <br/>
  If you don't like one of our new inlay hints, you can disable it in
  `Settings | Editor | Inlay Hints | Rust`.

* Refactorings improvements:
    <!-- https://github.com/intellij-rust/intellij-rust/pull/4985 -->
    * Provide `Introduce Constant` refactoring.
      You can invoke it via `Refactor | Extract | Constant` or <kbd>Ctrl+Alt+C</kbd> (by [@Kobzol])

        {% include gif-img.html path="/assets/posts/changelog-122/4985" w="700px" %}

    <!-- https://github.com/intellij-rust/intellij-rust/pull/5304 -->
    * Improve `Extract Enum Variant` refactoring. Now `derive` and `repr`
     attributes are copied from the parent enum to the generated struct (by [@Kobzol])

        {% include gif-img.html path="/assets/posts/changelog-122/5304" w="700px" %}

    <!-- https://github.com/intellij-rust/intellij-rust/pull/5291 -->
    * Also, `Extract Enum Variant` is now available from `Refactor | Extract`
      and `Refactor | Refactor This` menus (by [@Kobzol])

<!-- https://github.com/intellij-rust/intellij-rust/pull/4969 -->
* Highlight errors in format string literal in macros like `println`, `write`, `format`, etc. (by [@Kobzol])

   <img src="/assets/posts/changelog-122/4969.png" alt="errors in format string literal screenshot" width="612px"/>

<!-- https://github.com/intellij-rust/intellij-rust/pull/5308 -->
* Automatically insert missing `<>` when completing generic types (by [@Kobzol])

   {% include gif-img.html path="/assets/posts/changelog-122/5308" w="638px" %}

<!-- https://github.com/intellij-rust/intellij-rust/pull/5336 -->
* Support `include!` macro calls generated by another macro call.
  Note, full support (name resolution and completion for code from including file in included
  one and correct module hierarchy recognition, i.e. absence of false positive "File is not
  included in module tree" editor notification), is available only when the new macro expansion
  engine is enabled (You can enable it in
  `Settings | Languages & Frameworks | Rust | Expand Declarative macros`).

<!-- https://github.com/intellij-rust/intellij-rust/pull/5270 -->
* Show value of `NonZero*` numbers in the debugger (by [@Kobzol])

## Performance Improvements

<!-- https://github.com/intellij-rust/intellij-rust/pull/5343 -->
<!-- https://github.com/intellij-rust/intellij-rust/pull/5297 -->
* Slightly optimized macro name resolution and expansion

<!-- https://github.com/intellij-rust/intellij-rust/pull/5251 -->
* Fixes UI freezes during project save if the new macro expansion engine is enabled

<!-- https://github.com/intellij-rust/intellij-rust/pull/5205 -->
* Improved macro expansion task cancellation. Typing in `Cargo.toml` should be smoother.
  This affects you only if the new macro expansion engine is enabled.

## Fixes

<!-- https://github.com/intellij-rust/intellij-rust/pull/5147 -->
* Take into account `extern` keyword by `Implement members` quick fix (by [@t-kameyama])

<!-- https://github.com/intellij-rust/intellij-rust/pull/5335 -->
* Fix false-positive `E0603 module is private` if the module is declared multiple times (e.g. in `lib.rs` and `main.rs`)

* `Go To Super` action (<kbd>Ctrl+U</kbd>) now allows choosing a module declaration (if multiple)

<!-- https://github.com/intellij-rust/intellij-rust/pull/5333 -->
* Fix `#[cfg()]` attributes support. Ignore `impl`'s from disabled submodules

<!-- https://github.com/intellij-rust/intellij-rust/pull/5320 -->
* Improve`"complete current statement` (<kbd>Ctrl+Shift+Enter</kbd>) action:
  * don't add new line after `;` completion
  * insert empty line on empty line

<!-- https://github.com/intellij-rust/intellij-rust/pull/5317 -->
* `Implement Members` and `Generate Construct` actions now take into account all trait bounds of trait object types

<!-- https://github.com/intellij-rust/intellij-rust/pull/5312 -->
* Omit unchanged default type parameters of parameters by `Extract Function` refactoring (by [@Kobzol])

<!-- https://github.com/intellij-rust/intellij-rust/pull/5296 -->
* Fix `Find Usages` action:
  * take into account files added to the project by `include!()` macro
  * correctly find reference to `pub(crate)` items declared in crate root

<!-- https://github.com/intellij-rust/intellij-rust/pull/5293 -->
* Fix the [issue](https://youtrack.jetbrains.com/issue/IDEA-238958) with non-rust directory renaming.
  Previously, the plugin sometimes broke "Rename" refactoring applied to a directory in non-rust projects.

<!-- https://github.com/intellij-rust/intellij-rust/pull/5292 -->
* Fix the [issue](https://github.com/intellij-rust/intellij-rust/issues/5285)
  with `Surround with unsafe block` quick fix (by [@Kobzol])

<!-- https://github.com/intellij-rust/intellij-rust/pull/5261 -->
* Properly do `Invalidate caches & Restart` action

<!-- https://github.com/intellij-rust/intellij-rust/pull/5155 -->
* Fix `Use of moved value` [false-positive](https://github.com/intellij-rust/intellij-rust/issues/5013) error

<!-- https://github.com/intellij-rust/intellij-rust/pull/5288 -->
* Do not throw the [`exception`](https://github.com/intellij-rust/intellij-rust/issues/5287)
  while building a project via `Build` action

<!-- https://github.com/intellij-rust/intellij-rust/pull/5345 -->
* Fix [`IndexNotReadyException`](https://github.com/intellij-rust/intellij-rust/issues/5123) while completion
  during indexing

<!-- https://github.com/intellij-rust/intellij-rust/pull/5342 -->
* Fix possible [`java.lang.AssertionError`](https://github.com/intellij-rust/intellij-rust/pull/5342) exception during indexing

<!-- https://github.com/intellij-rust/intellij-rust/pull/5341 -->
* Fetch cargo metadata even with compilation error.
  Previously, if `org.rust.cargo.evaluate.build.scripts` experimental feature was enabled and
  there was compilation error, fetching cargo workspace data failed

## Internal Improvements

<!-- https://github.com/intellij-rust/intellij-rust/pull/5326 -->
* Improve developer workflows ([read more](https://github.com/intellij-rust/intellij-rust/pull/5326))

Full set of changes can be found [here](https://github.com/intellij-rust/intellij-rust/milestone/30?closed=1)

[@Kobzol]: https://github.com/Kobzol
[@avrong]: https://github.com/avrong
[@t-kameyama]: https://github.com/t-kameyama

[Github]: https://github.com/intellij-rust/intellij-rust
