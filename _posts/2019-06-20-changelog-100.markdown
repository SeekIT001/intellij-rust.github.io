---
layout: post
title: "IntelliJ Rust Changelog #100"
date: 2019-06-20 18:09:59 +0300
---


## New Features

* Language support improvements:
  * Add basic support of [const generics](https://github.com/rust-lang/rfcs/blob/master/text/2000-const-generics.md) like
  parsing, name resolution, completion, etc. Type inference takes such parameters into account as well
  <!-- https://github.com/intellij-rust/intellij-rust/pull/4041 -->
  * Support [in-band lifetimes](https://github.com/rust-lang/rfcs/blob/master/text/2115-argument-lifetimes.md)

<!-- https://github.com/intellij-rust/intellij-rust/pull/3935 -->
* Partially support `include` macro. Now if `include` macro invocation contains only string literal,
all common code insight features (like name resolution, code completion, etc.)
will work in both including and included files

  {% include gif-img.html path="/assets/posts/changelog-100/initial-include-macro-support" w="700px" %}

<!-- https://github.com/intellij-rust/intellij-rust/pull/3640 -->
* Make more precise navigation when an element is generated by a macro.
Note, it works only when the new macro expansion engine is enabled.
You can turn it on via `Preferences | Languages & Frameworks | Rust | Expand declarative macros` option

  {% include gif-img.html path="/assets/posts/changelog-100/navigation-in-macro" w="700px" %}

<!-- https://github.com/intellij-rust/intellij-rust/pull/3832 -->
<!-- https://github.com/intellij-rust/intellij-rust/pull/3980 -->
* Add detection of the new compiler errors: [E0132](https://doc.rust-lang.org/error-index.html#E0132),
[E0322](https://doc.rust-lang.org/error-index.html#E0322) and
[E0328](https://doc.rust-lang.org/error-index.html#E0328) (by [@mibac138])

<!-- https://github.com/intellij-rust/intellij-rust/pull/3952 -->
* Provide completion while typing in GDB and LLDB consoles

  {% include gif-img.html path="/assets/posts/changelog-100/debugger-console-completion" w="700px" %}

<!-- https://github.com/intellij-rust/intellij-rust/pull/4034 -->
* Support default type params while type inference.
It also should fix incorrect code generation by `Implement members` quick fix for types with default type params

<!-- https://github.com/intellij-rust/intellij-rust/pull/3961 -->
* Make possible to disable `File is not included in module tree` editor notification

## Fixes

<!-- https://github.com/intellij-rust/intellij-rust/pull/3749 -->
* Improve performance of marco name resolution.
It should speed up the macro expansion task produced by new experimental macro expansion engine

<!-- https://github.com/intellij-rust/intellij-rust/pull/4045 -->
* Make `Add format string argument` intention work properly when format macro has additional args like `write!(f, "")`

<!-- https://github.com/intellij-rust/intellij-rust/pull/4029 -->
* Fix false positive [E0118](https://doc.rust-lang.org/error-index.html#E0118) error annotations for primitive type `impl`s in stdlib (by [@mibac138])

<!-- https://github.com/intellij-rust/intellij-rust/pull/4023 -->
* Fix multiple name resolution result for procedural macros (by [@fedochet])

<!-- https://github.com/intellij-rust/intellij-rust/pull/3898 -->
* Highlight exit points better (by [@rrevenantt])

<!-- https://github.com/intellij-rust/intellij-rust/pull/3988 -->
* Do not show `Unresolved reference` error annotation for methods with multiple declaration (e.g. with different `cfg` attributes)



[@fedochet]: https://github.com/fedochet
[@mibac138]: https://github.com/mibac138
[@rrevenantt]: https://github.com/rrevenantt
