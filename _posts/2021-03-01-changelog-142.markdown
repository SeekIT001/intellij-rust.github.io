---
layout: post
title: "IntelliJ Rust Changelog #142"
date: 2021-03-01 16:00:00 +0300
---


## New Features

* Debugging is now available in [PyCharm Professional](https://www.jetbrains.com/pycharm/) starting with 2021.1 EAPs.
  Note, it requires [Native Debugging Support](https://plugins.jetbrains.com/plugin/12775-native-debugging-support) plugin and supports only LLDB

* [#6877], [#6835] The [Native Debugging Support](https://plugins.jetbrains.com/plugin/12775-native-debugging-support) plugin is now
  being suggested when you try to debug your Rust code in [PyCharm Professional](https://www.jetbrains.com/pycharm/)
  and [GoLand](https://www.jetbrains.com/go/)

* [#6807] `Change Signature` refactoring (`Refactor | Change Signature` or <kbd>Ctrl</kbd>+<kbd>F6</kbd>) now allows you to
  specify a default value for new parameters (by [@Kobzol])

  {% include gif-img.html path="/assets/posts/changelog-142/6807" w="700px" %}

* Suggest installing `wasm32-unknown-unknown` target if it is not installed yet when you try to execute `wasm-pack`
  run configuration

## Fixes

* Improvements in [new name resolution](https://github.com/intellij-rust/intellij-rust/issues/6217) engine:
    * [#6734] Fix name resolution of macro calls inside file included by `include!` macro

    * [#6730] Support file-level `cfg` attributes

    * [#6721] Support name resolution to multiple inline modules

    * [#6720] Fix name resolution inside `cfg`-disabled inline modules

    * [#6773] Use old name resolution in test/bench non-workspace crates

  Note, you can enable the new engine via `Use experimental name resolution engine` option in
  `Preferences | Languages & Frameworks | Rust` settings

* Refactoring improvements:
    * [#6874] Properly handle default type arguments in `Extract Function` (`Refactor | Extract Method` or
      <kbd>Ctrl</kbd>+<kbd>Alt</kbd>+<kbd>M</kbd>) refactoring

    * [#6005] Delete redundant imports properly when performing `Inline Function` (`Refactor | Inline...` or
      <kbd>Ctrl</kbd>+<kbd>Alt</kbd>+<kbd>N</kbd>) refactoring on a function declared in a
      different module (by [@SaarYogev])

    * [#6695] Properly handle `where` clauses when converting between structs and tuples using `Convert to block/tuple struct`

* [#6869] Fix fetching info about items generated by build scripts. Note, the corresponding feature work only when
  `org.rust.cargo.evaluate.build.scripts` experimental feature is enabled

* [#6855] Do not show incorrect move errors on a function pointer type used as a type parameter

* [#6848] Support detecting [E0116](https://doc.rust-lang.org/error-index.html#E0116) “Inherent implementation
  defined for a type outside the current crate” for impls for trait objects

* [#6786] Take `cfg` attributes into account when performing control-flow analysis

* [#6655] Fix movement of match arms inside closures when performing `Move Statement` actions
  (by [@t-kameyama])

* [#4765] Ignore [underscore imports](https://doc.rust-lang.org/reference/items/use-declarations.html#underscore-imports)
  during duplicates detection

* [#6846] Properly change state of optional dependencies in `Cargo.toml` tables

* [#6818] Fix crate registry index parsing when using experimental local crates index. This feature is disabled by default
  for now. To use it, enable `org.rust.crates.local.index` experimental feature

## Internal Improvements

* [#6459] Add Python typings for our LLDB/GDB pretty-printers to enable code analysis and completion in the `prettyPrinters`
  module

Full set of changes can be found [here](https://github.com/intellij-rust/intellij-rust/milestone/50?closed=1)

[@Kobzol]: https://github.com/Kobzol
[@SaarYogev]: https://github.com/SaarYogev
[@t-kameyama]: https://github.com/t-kameyama


[#4765]: https://github.com/intellij-rust/intellij-rust/pull/4765
[#6005]: https://github.com/intellij-rust/intellij-rust/pull/6005
[#6459]: https://github.com/intellij-rust/intellij-rust/pull/6459
[#6655]: https://github.com/intellij-rust/intellij-rust/pull/6655
[#6695]: https://github.com/intellij-rust/intellij-rust/pull/6695
[#6720]: https://github.com/intellij-rust/intellij-rust/pull/6720
[#6721]: https://github.com/intellij-rust/intellij-rust/pull/6721
[#6730]: https://github.com/intellij-rust/intellij-rust/pull/6730
[#6734]: https://github.com/intellij-rust/intellij-rust/pull/6734
[#6773]: https://github.com/intellij-rust/intellij-rust/pull/6773
[#6786]: https://github.com/intellij-rust/intellij-rust/pull/6786
[#6807]: https://github.com/intellij-rust/intellij-rust/pull/6807
[#6818]: https://github.com/intellij-rust/intellij-rust/pull/6818
[#6835]: https://github.com/intellij-rust/intellij-rust/pull/6835
[#6846]: https://github.com/intellij-rust/intellij-rust/pull/6846
[#6848]: https://github.com/intellij-rust/intellij-rust/pull/6848
[#6855]: https://github.com/intellij-rust/intellij-rust/pull/6855
[#6869]: https://github.com/intellij-rust/intellij-rust/pull/6869
[#6874]: https://github.com/intellij-rust/intellij-rust/pull/6874
[#6877]: https://github.com/intellij-rust/intellij-rust/pull/6877