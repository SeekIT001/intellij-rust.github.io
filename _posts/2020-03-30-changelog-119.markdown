---
layout: post
title: "IntelliJ Rust Changelog #119"
date: 2020-03-30 16:08:00 +0300
---


## New Features

* [#4936] Provide name resolution of items declared in `impl` blocks for type aliases. Taking performance into account, this feature is only enabled for types with a limited number of aliases

* [#5087] Provide the quick fix for `Mismatched types` error annotation to change a function's return type. Note, it doesnâ€™t work inside trait `impl` blocks for now

    {% include gif-img.html path="/assets/posts/changelog-119/change-return-type" w="700px" %}

* [#5124] Now "Unresolved reference" inspection highlights code more precisely (by [@Exidex])

* [#5120] Detect [E0451](https://doc.rust-lang.org/error-index.html#E0451) compiler error

* [#5114] Annotate [slice patterns](https://github.com/rust-lang/rfcs/blob/master/text/2359-subslice-pattern-syntax.md) as an experimental feature for toolchains before 1.42

* Parser improvements:
  * [#5115] Support [const trait impls](https://github.com/oli-obk/rfcs/blob/const_generic_const_fn_bounds/text/0000-const-generic-const-fn-bounds.md) syntax
  * [#5099] Parse paths in attributes correctly
  * [#5081] Correctly parse [`&raw`](https://github.com/rust-lang/rfcs/blob/master/text/2582-raw-reference-mir-operator.md) operator. Note, type inference for the operator is not implemented yet
  * [#5009] Fix parsing of lifetime bounds in `Fn` trait types (by [@rrevenantt])

## Performance Improvements

* [#5101] Slightly speeds up macro expansion process when the [experimental engine](https://www.jetbrains.com/help/clion/rust-support.html#language-support) is enabled

* [#5085] Slightly speeds up `cfg` attributes processing

## Fixes

* [#5084] Prevent an infinite recursion while analyzing a control flow inside macros

* [#5082] Now some inspections (e.g., `Liveness Analysis`) correctly process macro calls. It should fix some false positive annotations

* [#5057] Now formatter adds a new line between items inside a function's body

* [#5053] Fix "Introduce Variable" intention in case if the first expression is inside a nested block

* [#5020] Handle type aliases in "Destructure" intention (by [@Kobzol])

* [#5012] Handle async functions in "Extract Function" refactoring (by [@Kobzol])

* [#5103] Generates external documentation link for a public item from `impl` block even if it is located in a private module

Full set of changes can be found [here](https://github.com/intellij-rust/intellij-rust/milestone/27?closed=1)

[@Exidex]: https://github.com/Exidex
[@Kobzol]: https://github.com/Kobzol
[@rrevenantt]: https://github.com/rrevenantt


[#4936]: https://github.com/intellij-rust/intellij-rust/pull/4936
[#5009]: https://github.com/intellij-rust/intellij-rust/pull/5009
[#5012]: https://github.com/intellij-rust/intellij-rust/pull/5012
[#5020]: https://github.com/intellij-rust/intellij-rust/pull/5020
[#5053]: https://github.com/intellij-rust/intellij-rust/pull/5053
[#5057]: https://github.com/intellij-rust/intellij-rust/pull/5057
[#5081]: https://github.com/intellij-rust/intellij-rust/pull/5081
[#5082]: https://github.com/intellij-rust/intellij-rust/pull/5082
[#5084]: https://github.com/intellij-rust/intellij-rust/pull/5084
[#5085]: https://github.com/intellij-rust/intellij-rust/pull/5085
[#5087]: https://github.com/intellij-rust/intellij-rust/pull/5087
[#5099]: https://github.com/intellij-rust/intellij-rust/pull/5099
[#5101]: https://github.com/intellij-rust/intellij-rust/pull/5101
[#5103]: https://github.com/intellij-rust/intellij-rust/pull/5103
[#5114]: https://github.com/intellij-rust/intellij-rust/pull/5114
[#5115]: https://github.com/intellij-rust/intellij-rust/pull/5115
[#5120]: https://github.com/intellij-rust/intellij-rust/pull/5120
[#5124]: https://github.com/intellij-rust/intellij-rust/pull/5124