---
layout: post
title: "IntelliJ Rust Changelog #140"
date: 2021-02-01 17:00:00 +0300
---

Please welcome our new [documentation](https://plugins.jetbrains.com/plugin/8182-rust/docs/welcome-to-rust.html) ü•≥<br/>
It covers almost everything about the plugin, from basic how-to-s to detailed feature descriptions ‚úçÔ∏è.
And we'll do our best to keep it up-to-date as the plugin evolves!
Hope you find it helpful!

Also, this is the last release that supports the 2020.2 platform. To receive plugin updates further, please upgrade your IDE to 2020.3.

## New Features

* [#5944] Add `Change Signature` refactoring (`Refactor | Change Signature` or <kbd>Ctrl</kbd>+<kbd>F6</kbd>)
  for functions and methods (by [@Kobzol])

  {% include gif-img.html path="/assets/posts/changelog-140/5944" w="700px" %}

* [#6563] Introduce `Share in Playground` action to share your code on [play.rust-lang.org](https://play.rust-lang.org/).
  You can invoke it via `Tools | Rust | Share in Playground` or via context menu

  {% include gif-img.html path="/assets/posts/changelog-140/6563" w="700px" %}

* [#5552] Annotate wrong return type of an empty function (by [@Kobzol])

  <img src="/assets/posts/changelog-140/5552.png" alt="empty function screenshot" width="700px"/>

* [#6602] Gray out disabled [`cfg_attr`](https://doc.rust-lang.org/reference/conditional-compilation.html#the-cfg_attr-attribute)
  attributes

  <img src="/assets/posts/changelog-140/6602.png" alt="disabled attributes screenshot" width="700px"/>

* [#6590] Support `Build` tool window for `cargo check` and `clippy` commands

* [#6535] Add an inspection to check whether a Cargo feature has a cyclic dependency on itself

* [#6471] `Create Function` intention now supports associated functions (by [@Kobzol])

* [#6324] Pass [`required-features`](https://doc.rust-lang.org/cargo/reference/cargo-targets.html#the-required-features-field)
  implicitly to a run configuration

* [#6364] Support [`min_const_generics`](https://without.boats/blog/shipping-const-generics/)
  feature (will be stabilized in Rust `1.51.0`)

## Performance Improvements

* [#6662], [#6659] Slightly speed up name resolution & type inference

## Fixes

* [#5475] Show type names in inlay parameter hints for generic enum variants (by [@Kobzol])

* [#6650] Show all re-exports of the same item in completion list.
  Previously, the plugin showed only one suggestion per item which led to hiding
  alternative ways of importing the item

* [#6501] `Import` quick-fix sorts items now: workspace items go first, then stdlib ones,
  and then the rest (by [@gfreezy])

* [#6643] Adjust type inference to infer type of allocator type parameter for `Box` and `Vec` items.
  See the corresponding [RFC](https://rust-lang.github.io/rfcs/1398-kinds-of-allocators.html)
  about allocator API

* [#6636] Take into account `cfg_attr` attribute during experimental compiler features annotation like
  `#![cfg_attr(feature = "nightly", feature(generators))]`

* [#6691] Improve dependency completion in `Cargo.toml` (by [@Pzixel])

* [#6668] Fix `Join Lines` action (<kbd>Ctrl</kbd>+<kbd>Shift</kbd>+<kbd>J</kbd>)
  in case there is no whitespace between parameters (by [@t-kameyama])

* [#6684], [#6678] Extract only selected statements in `Extract function` refactoring (by [@Kobzol])

* [#6609] Download stdlib dependencies into IDE system directory instead of `src`
  directory in toolchain location to avoid unexpected behavior like read-only directory.
  Note, stdlib dependencies are downloaded by the plugin only when
  `org.rust.cargo.fetch.actual.stdlib.metadata` experimental feature is enabled,
  otherwise the plugin uses hardcoded stdlib structure

* [#6580] Do not suggest `Change item visibility` intention in trait impl blocks (by [@Kobzol])

* [#6685] Correctly resolve method calls (private method in inherent impl vs public trait impl)

* [#6504] Fix working directory when run `cargo test` in debug mode

* [#4550] Don't activate `Build` tool window if `Activate tool window` option of the corresponding
  run configuration is disabled

* [#6702] Allow building different Cargo projects simultaneously

* [#6750] Fix `Build` action in CLion 2020.3.2

* [#6671] Fix endless `Go To Declaration` for invalid self-containing structs

## Internal Improvements

* [#6658] Add `proc-macro-expander` source (see [#6658](https://github.com/intellij-rust/intellij-rust/pull/6658))

* [#6623] Unify TOML key parsing (see [#6623](https://github.com/intellij-rust/intellij-rust/pull/6623))

Full set of changes can be found [here](https://github.com/intellij-rust/intellij-rust/milestone/48?closed=1)

[@Kobzol]: https://github.com/Kobzol
[@Pzixel]: https://github.com/Pzixel
[@gfreezy]: https://github.com/gfreezy
[@t-kameyama]: https://github.com/t-kameyama


[#4550]: https://github.com/intellij-rust/intellij-rust/pull/4550
[#5475]: https://github.com/intellij-rust/intellij-rust/pull/5475
[#5552]: https://github.com/intellij-rust/intellij-rust/pull/5552
[#5944]: https://github.com/intellij-rust/intellij-rust/pull/5944
[#6324]: https://github.com/intellij-rust/intellij-rust/pull/6324
[#6364]: https://github.com/intellij-rust/intellij-rust/pull/6364
[#6471]: https://github.com/intellij-rust/intellij-rust/pull/6471
[#6501]: https://github.com/intellij-rust/intellij-rust/pull/6501
[#6504]: https://github.com/intellij-rust/intellij-rust/pull/6504
[#6535]: https://github.com/intellij-rust/intellij-rust/pull/6535
[#6563]: https://github.com/intellij-rust/intellij-rust/pull/6563
[#6580]: https://github.com/intellij-rust/intellij-rust/pull/6580
[#6590]: https://github.com/intellij-rust/intellij-rust/pull/6590
[#6602]: https://github.com/intellij-rust/intellij-rust/pull/6602
[#6609]: https://github.com/intellij-rust/intellij-rust/pull/6609
[#6623]: https://github.com/intellij-rust/intellij-rust/pull/6623
[#6636]: https://github.com/intellij-rust/intellij-rust/pull/6636
[#6643]: https://github.com/intellij-rust/intellij-rust/pull/6643
[#6650]: https://github.com/intellij-rust/intellij-rust/pull/6650
[#6658]: https://github.com/intellij-rust/intellij-rust/pull/6658
[#6659]: https://github.com/intellij-rust/intellij-rust/pull/6659
[#6662]: https://github.com/intellij-rust/intellij-rust/pull/6662
[#6668]: https://github.com/intellij-rust/intellij-rust/pull/6668
[#6671]: https://github.com/intellij-rust/intellij-rust/pull/6671
[#6678]: https://github.com/intellij-rust/intellij-rust/pull/6678
[#6684]: https://github.com/intellij-rust/intellij-rust/pull/6684
[#6685]: https://github.com/intellij-rust/intellij-rust/pull/6685
[#6691]: https://github.com/intellij-rust/intellij-rust/pull/6691
[#6702]: https://github.com/intellij-rust/intellij-rust/pull/6702
[#6750]: https://github.com/intellij-rust/intellij-rust/pull/6750