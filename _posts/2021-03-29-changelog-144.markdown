---
layout: post
title: "IntelliJ Rust Changelog #144"
date: 2021-03-29 17:00:00 +0300
---

## New Features

<!-- https://github.com/intellij-rust/intellij-rust/pull/6947 -->
* Support import aliases in `Move` refactoring (`Refactor | Move` or <kbd>F6</kbd>)

  {% include gif-img.html path="/assets/posts/changelog-144/6947" w="600px" %}

* [Const generics](https://rust-lang.github.io/rfcs/2000-const-generics.html) support improvements:
  <!-- https://github.com/intellij-rust/intellij-rust/pull/7001 -->
  * Support const generics in `Wrong generic arguments number` ([E0107](https://doc.rust-lang.org/error-index.html#E0107)) inspection

  <!-- https://github.com/intellij-rust/intellij-rust/pull/6959 -->
  * Support `Move Element Right/Left` actions for const generic parameters

  <!-- https://github.com/intellij-rust/intellij-rust/pull/6958 -->
  * Properly render const generics in signature of a top-level item

  <!-- https://github.com/intellij-rust/intellij-rust/pull/6948 -->
  * Fix type rendering with const generic parameters

<!-- https://github.com/intellij-rust/intellij-rust/pull/6799 -->
* Complete dependencies by subwords in `Cargo.toml` when using experimental local crates index. This feature is disabled by default
  for now. To use it, enable `org.rust.crates.local.index` option in `Experimental Feature` dialog (`Help | Find Action` and type `Experimental features` to open the dialog)

  {% include gif-img.html path="/assets/posts/changelog-144/6799" w="600px" %}

<!-- https://github.com/intellij-rust/intellij-rust/pull/6893 -->
* Import unresolved types from a function signature after performing `Extract Function` refactoring (`Refactor | Extract Method` or
  <kbd>Ctrl</kbd>+<kbd>Alt</kbd>+<kbd>M</kbd>)
  
<!-- https://github.com/intellij-rust/intellij-rust/pull/6966 -->
* Automatically select the default project Rust toolchain from `Preferences | Languages & Frameworks | Rust` when creating a new project

<!-- https://github.com/intellij-rust/intellij-rust/pull/6066 -->
*  Use [`todo!()`](https://doc.rust-lang.org/std/macro.todo.html) instead of [`unimplemented!()`](https://doc.rust-lang.org/std/macro.unimplemented.html)
   in function bodies generated by [code generation](https://plugins.jetbrains.com/plugin/8182-rust/docs/rust-code-generation.html) features like  `Implement members` and `Create function` actions (by [@KarelPeeters])

<!-- https://github.com/intellij-rust/intellij-rust/pull/6934 -->
* Auto-indent line when typing <kbd>Enter</kbd> in macro bodies

<!-- https://github.com/intellij-rust/intellij-rust/pull/6907 -->
* Provide debugging with LLDB in [Rider for Unreal Engine](https://www.jetbrains.com/lp/rider-unreal/) 2021.1. 
  Note, only [MSVC toolchain](https://doc.rust-lang.org/edition-guide/rust-2018/platform-and-target-support/msvc-toolchain-support.html) is supported

<!-- https://github.com/intellij-rust/intellij-rust/pull/6956 -->
* Increase minimal supported rustc version to 1.41.0

<!-- https://github.com/intellij-rust/intellij-rust/pull/6912 -->
* Enable by default `Simplify boolean expression` inspection

## Fixes

<!-- https://github.com/intellij-rust/intellij-rust/pull/6955 -->
* Do not show `` Redundant `::` `` warning for expressions inside length of array types

<!-- https://github.com/intellij-rust/intellij-rust/pull/6923 -->
* Reduce availability range of some intention actions. For example, now `Add else branch to this if statement` is not suggested in <kbd>Alt</kbd>+<kbd>Enter</kbd> menu when the caret is placed inside an `if` body

<!-- https://github.com/intellij-rust/intellij-rust/pull/6896 -->
* Do not insert default type parameters by `Implement Member` actions

<!-- https://github.com/intellij-rust/intellij-rust/pull/6886 -->
* Do not move the entire `match` arm in [`Move Statement Up/Down`](https://www.jetbrains.com/help/idea/working-with-source-code.html#move-statements) action (<kbd>Ctrl</kbd>+<kbd>Shift</kbd>+<kbd>Up</kbd>/<kbd>Down</kbd>) invoked on the statement inside the arm body (by [@t-kameyama])

<!-- https://github.com/intellij-rust/intellij-rust/pull/6654 -->
* Ignore environment variables when comparing Cargo run configurations. This allows reusing a similar existing configuration instead of creating a new one

<!-- https://github.com/intellij-rust/intellij-rust/pull/6450 -->
* Fix code insight and name resolution for [in-band lifetimes](https://doc.rust-lang.org/beta/unstable-book/language-features/in-band-lifetimes.html)

<!-- https://github.com/intellij-rust/intellij-rust/pull/6989 -->
* Expand macro calls under `cfg` attribute after toggling a Cargo feature

<!-- https://github.com/intellij-rust/intellij-rust/pull/6769 -->
* Fix false-positive [E0658](https://doc.rust-lang.org/error-index.html#E0658) in stdlib

Full set of changes can be found [here](https://github.com/intellij-rust/intellij-rust/milestone/52?closed=1)

[@KarelPeeters]: https://github.com/KarelPeeters
[@t-kameyama]: https://github.com/t-kameyama
